{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data reclassification\n",
    "\n",
    "Reclassifying data based on specific criteria is a common task when doing GIS analysis. The purpose of this lesson is to see how we can reclassify values based on some criteria which can be whatever, such as:\n",
    "\n",
    "```\n",
    "1. if travel time to my work is less than 30 minutes\n",
    "\n",
    "    AND\n",
    "\n",
    "    2. the rent of the apartment is less than 1000 â‚¬ per month\n",
    "\n",
    "    ------------------------------------------------------\n",
    "\n",
    "    IF TRUE: ==> I go to view it and try to rent the apartment\n",
    "    IF NOT TRUE: ==> I continue looking for something else\n",
    "```\n",
    "\n",
    "In this tutorial, we will use [Travel Time Matrix data from Helsinki](https://blogs.helsinki.fi/accessibility/helsinki-region-travel-time-matrix/) to classify some features of the data based on map classifiers that are commonly used e.g. when doing visualizations, and our own self-made classifier where we determine how the data should be classified.\n",
    "\n",
    "1. use classification schemes from the PySAL [mapclassify library](https://pysal.org/mapclassify/) to classify travel times into multiple classes.\n",
    "\n",
    "2. use travel times and distances to find out\n",
    "\n",
    "   - good locations to buy an apartment with good public transport accessibility to city center\n",
    "   - but from a bit further away from city center where the prices are presumably lower.\n",
    "\n",
    "## Input data\n",
    "\n",
    "In this tutorial, we will use the geojson file generated in the previous section:\n",
    "`\"data/TravelTimes_to_5975375_RailwayStation_Helsinki.geojson\"`\n",
    "\n",
    "Alternatively, you can re-download [L4 data](https://github.com/AutoGIS/data/raw/master/L4_data.zip) and use `\"data/Travel_times_to_5975375_RailwayStation.shp\"` as input file in here.\n",
    "\n",
    "\n",
    "\n",
    "## Classifying data\n",
    "\n",
    "### Classification based on common classifiers\n",
    "\n",
    "[PySAL](http://pysal.readthedocs.io/en/latest) -module is an extensive Python library for spatial analysis. It also includes all of the most common data classifiers that are used commonly e.g. when visualizing data. Available map classifiers in pysal's mapclassify -module are ([see here for more details](https://pysal.readthedocs.io/en/v1.11.0/library/esda/mapclassify.html)):\n",
    "\n",
    " - Box_Plot\n",
    " - Equal_Interval\n",
    " - Fisher_Jenks\n",
    " - Fisher_Jenks_Sampled\n",
    " - HeadTail_Breaks\n",
    " - Jenks_Caspall\n",
    " - Jenks_Caspall_Forced\n",
    " - Jenks_Caspall_Sampled\n",
    " - Max_P_Classifier\n",
    " - Maximum_Breaks\n",
    " - Natural_Breaks\n",
    " - Quantiles\n",
    " - Percentiles\n",
    " - Std_Mean\n",
    " - User_Defined\n",
    "\n",
    "- First, we need to read our Travel Time data from Helsinki:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   car_m_d  car_m_t  car_r_d  car_r_t  from_id  pt_m_d  pt_m_t  pt_m_tt  \\\n",
      "0    29476       41    29483       46  5876274   29990      76       95   \n",
      "1    29456       41    29462       46  5876275   29866      74       95   \n",
      "\n",
      "   pt_r_d  pt_r_t  pt_r_tt    to_id  walk_d  walk_t    GML_ID   NAMEFIN  \\\n",
      "0   24984      77       99  5975375   25532     365  27517366  Helsinki   \n",
      "1   24860      75       93  5975375   25408     363  27517366  Helsinki   \n",
      "\n",
      "       NAMESWE NATCODE                                           geometry  \n",
      "0  Helsingfors     091  POLYGON ((402250.0001322526 6685750.000039577,...  \n",
      "1  Helsingfors     091  POLYGON ((402367.8898583531 6685750.000039573,...  \n"
     ]
    }
   ],
   "source": [
    "import geopandas as gpd\n",
    "\n",
    "fp = \"data/TravelTimes_to_5975375_RailwayStation_Helsinki.geojson\"\n",
    "\n",
    "# Read the GeoJSON file similarly as Shapefile\n",
    "acc = gpd.read_file(fp)\n",
    "\n",
    "# Let's see what we have\n",
    "print(acc.head(2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see, there are plenty of different variables (see [from here the description](http://blogs.helsinki.fi/accessibility/helsinki-region-travel-time-matrix-2015) for all attributes) but what we are interested in are columns called `pt_r_tt` which is telling the time in minutes that it takes to reach city center from different parts of the city, and `walk_d` that tells the network distance by roads to reach city center from different parts of the city (almost equal to Euclidian distance).\n",
    "\n",
    "**The NoData values are presented with value -1**. \n",
    "\n",
    "- Thus we need to remove the No Data values first.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Include only data that is above or equal to 0\n",
    "acc = acc.loc[acc['pt_r_tt'] >=0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Let's plot the data and see how it looks like\n",
    "- `cmap` parameter defines the color map. Read more about [choosing colormaps in matplotlib](https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html)\n",
    "- `scheme` option scales the colors according to a classification scheme (requires `mapclassify` module to be installed):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Plot using 9 classes and classify the values using \"Natural Breaks\" classification\n",
    "acc.plot(column=\"pt_r_tt\", scheme=\"Natural_Breaks\", k=9, cmap=\"RdYlBu\", linewidth=0, legend=True)\n",
    "\n",
    "# Use tight layout\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see from this map, the travel times are lower in the south where the city center is located but there are some areas of \"good\" accessibility also in some other areas (where the color is red).\n",
    "\n",
    "- Let's also make a plot about walking distances:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot walking distance\n",
    "acc.plot(column=\"walk_d\", scheme=\"Natural_Breaks\", k=9, cmap=\"RdYlBu\", linewidth=0, legend=True)\n",
    "\n",
    "# Use tight layour\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Okay, from here we can see that the walking distances (along road network) reminds more or less Euclidian distances. \n",
    "\n",
    "### Applying classifiers to data\n",
    "\n",
    "As mentioned, the `scheme` option defines the classification scheme using `pysal/mapclassify`. Let's have a closer look at how these classifiers work."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import mapclassify"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Natural Breaks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "               Natural_Breaks              \n",
       " \n",
       " Lower            Upper               Count\n",
       "===========================================\n",
       "          x[i] <=  20.000               238\n",
       " 20.000 < x[i] <=  28.000               395\n",
       " 28.000 < x[i] <=  33.000               451\n",
       " 33.000 < x[i] <=  38.000               581\n",
       " 38.000 < x[i] <=  44.000               727\n",
       " 44.000 < x[i] <=  52.000               533\n",
       " 52.000 < x[i] <=  63.000               396\n",
       " 63.000 < x[i] <=  80.000               284\n",
       " 80.000 < x[i] <= 155.000               202"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mapclassify.Natural_Breaks(y=acc['pt_r_tt'], k=9)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Quantiles (default is 5 classes):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "                 Quantiles                 \n",
       " \n",
       " Lower            Upper               Count\n",
       "===========================================\n",
       "          x[i] <=  30.000               792\n",
       " 30.000 < x[i] <=  37.000               779\n",
       " 37.000 < x[i] <=  44.000               821\n",
       " 44.000 < x[i] <=  56.000               685\n",
       " 56.000 < x[i] <= 155.000               730"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mapclassify.Quantiles(y=acc['pt_r_tt'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- It's possible to extract the threshold values into an array:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  18.,   26.,   33.,   38.,   44.,   52.,   63.,   80.,  155.])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "classifier = mapclassify.Natural_Breaks(y=acc['pt_r_tt'], k=9)\n",
    "classifier.bins"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Let's apply one of the `Pysal` classifiers into our data and classify the travel times by public transport into 9 classes\n",
    "- The classifier needs to be initialized first with `make()` function that takes the number of desired classes as input parameter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the number of classes\n",
    "n_classes = 9\n",
    "\n",
    "# Create a Natural Breaks classifier\n",
    "classifier = mapclassify.Natural_Breaks.make(k=n_classes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Now we can apply that classifier into our data by using `apply` -function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pt_r_tt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   pt_r_tt\n",
       "0        8\n",
       "1        8\n",
       "2        8\n",
       "3        8\n",
       "4        8"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Classify the data\n",
    "classifications = acc[['pt_r_tt']].apply(classifier)\n",
    "\n",
    "# Let's see what we have\n",
    "classifications.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(classifications)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Okay, so now we have a DataFrame where our input column was classified into 9 different classes (numbers 1-9) based on [Natural Breaks classification](http://wiki-1-1930356585.us-east-1.elb.amazonaws.com/wiki/index.php/Jenks_Natural_Breaks_Classification).\n",
    "\n",
    "- We can also add the classification values directly into a new column in our dataframe:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pt_r_tt</th>\n",
       "      <th>nb_pt_r_tt</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>99</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>93</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>146</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>155</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>99</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   pt_r_tt  nb_pt_r_tt\n",
       "0       99           8\n",
       "1       93           8\n",
       "2      146           8\n",
       "3      155           8\n",
       "4       99           8"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Rename the column so that we know that it was classified with natural breaks\n",
    "acc['nb_pt_r_tt'] = acc[['pt_r_tt']].apply(classifier)\n",
    "\n",
    "# Let's see how our data looks like\n",
    "acc[['pt_r_tt', 'nb_pt_r_tt']].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Great, now we have those values in our accessibility GeoDataFrame. Let's visualize the results and see how they look."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot\n",
    "acc.plot(column=\"nb_pt_r_tt\", linewidth=0, legend=True)\n",
    "\n",
    "# Use tight layout\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And here we go, now we have a map where we have used one of the common classifiers to classify our data into 9 classes."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting a histogram\n",
    "\n",
    "A histogram is a graphic representation of the distribution of the data. When classifying the data, it's always good to consider how the data is distributed, and how the classification shceme divides values into different ranges. \n",
    "\n",
    "- plot the histogram using [pandas.DataFrame.plot.hist](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.plot.hist.html)\n",
    "- Number of histogram bins (groups of data) can be controlled using the parameter `bins`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x199b9a68128>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Histogram for public transport rush hour travel time\n",
    "acc['pt_r_tt'].plot.hist(bins=50)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Add threshold values on thop of the histogram:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define classifier\n",
    "classifier = mapclassify.Natural_Breaks(y=acc['pt_r_tt'], k=9)\n",
    "\n",
    "# Plot histogram for public transport rush hour travel time\n",
    "acc['pt_r_tt'].plot.hist(bins=50)\n",
    "\n",
    "for value in classifier.bins:\n",
    "    plt.axvline(value, color='k', linestyle='dashed', linewidth=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define classifier\n",
    "classifier = mapclassify.Quantiles(y=acc['pt_r_tt'])\n",
    "\n",
    "# Plot histogram for public transport rush hour travel time\n",
    "acc['pt_r_tt'].plot.hist(bins=50)\n",
    "\n",
    "for value in classifier.bins:\n",
    "    plt.axvline(value, color='k', linestyle='dashed', linewidth=1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-info\">\n",
    "\n",
    "**Task**\n",
    "\n",
    "Select another column from the data (for example, travel times by car), plot visualize it's histogram with breakpoints from different classification schemes.\n",
    "\n",
    "\n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Creating a custom classifier\n",
    "\n",
    "**Multicriteria data classification**\n",
    "\n",
    "Let's create a function where we classify the geometries into two classes based on a given `threshold` -parameter. If the area of a polygon is lower than the threshold value (average size of the lake), the output column will get a value 0, if it is larger, it will get a value 1. This kind of classification is often called a [binary classification](https://en.wikipedia.org/wiki/Binary_classification).\n",
    "\n",
    "First we need to create a function for our classification task. This function takes a single row of the GeoDataFrame as input, plus few other parameters that we can use.\n",
    "\n",
    "It also possible to do classifiers with multiple criteria easily in Pandas/Geopandas by extending the example that we started earlier. Now we will modify our binaryClassifier function a bit so that it classifies the data based on two columns.\n",
    "\n",
    "- Let's call it `custom_classifier` that takes into account two criteria:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "def custom_classifier(row, src_col1, src_col2, threshold1, threshold2, output_col):\n",
    "   # 1. If the value in src_col1 is LOWER than the threshold1 value\n",
    "   # 2. AND the value in src_col2 is HIGHER than the threshold2 value, give value 1, otherwise give 0\n",
    "   if row[src_col1] < threshold1 and row[src_col2] > threshold2:\n",
    "       # Update the output column with value 0\n",
    "       row[output_col] = 1\n",
    "   # If area of input geometry is higher than the threshold value update with value 1\n",
    "   else:\n",
    "       row[output_col] = 0\n",
    "\n",
    "   # Return the updated row\n",
    "   return row"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we have defined the function, and we can start using it.\n",
    "\n",
    "- Let's do our classification based on two criteria and find out grid cells where the **travel time is lower or equal to 20 minutes** but they are further away **than 4 km (4000 meters) from city center**.\n",
    "\n",
    "- Let's create an empty column for our classification results called `\"suitable_area\"`.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>car_m_d</th>\n",
       "      <th>car_m_t</th>\n",
       "      <th>car_r_d</th>\n",
       "      <th>car_r_t</th>\n",
       "      <th>from_id</th>\n",
       "      <th>pt_m_d</th>\n",
       "      <th>pt_m_t</th>\n",
       "      <th>pt_m_tt</th>\n",
       "      <th>pt_r_d</th>\n",
       "      <th>pt_r_t</th>\n",
       "      <th>...</th>\n",
       "      <th>to_id</th>\n",
       "      <th>walk_d</th>\n",
       "      <th>walk_t</th>\n",
       "      <th>GML_ID</th>\n",
       "      <th>NAMEFIN</th>\n",
       "      <th>NAMESWE</th>\n",
       "      <th>NATCODE</th>\n",
       "      <th>geometry</th>\n",
       "      <th>nb_pt_r_tt</th>\n",
       "      <th>suitable_area</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29476</td>\n",
       "      <td>41</td>\n",
       "      <td>29483</td>\n",
       "      <td>46</td>\n",
       "      <td>5876274</td>\n",
       "      <td>29990</td>\n",
       "      <td>76</td>\n",
       "      <td>95</td>\n",
       "      <td>24984</td>\n",
       "      <td>77</td>\n",
       "      <td>...</td>\n",
       "      <td>5975375</td>\n",
       "      <td>25532</td>\n",
       "      <td>365</td>\n",
       "      <td>27517366</td>\n",
       "      <td>Helsinki</td>\n",
       "      <td>Helsingfors</td>\n",
       "      <td>091</td>\n",
       "      <td>POLYGON ((402250.0001322526 6685750.000039577,...</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>29456</td>\n",
       "      <td>41</td>\n",
       "      <td>29462</td>\n",
       "      <td>46</td>\n",
       "      <td>5876275</td>\n",
       "      <td>29866</td>\n",
       "      <td>74</td>\n",
       "      <td>95</td>\n",
       "      <td>24860</td>\n",
       "      <td>75</td>\n",
       "      <td>...</td>\n",
       "      <td>5975375</td>\n",
       "      <td>25408</td>\n",
       "      <td>363</td>\n",
       "      <td>27517366</td>\n",
       "      <td>Helsinki</td>\n",
       "      <td>Helsingfors</td>\n",
       "      <td>091</td>\n",
       "      <td>POLYGON ((402367.8898583531 6685750.000039573,...</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   car_m_d  car_m_t  car_r_d  car_r_t  from_id  pt_m_d  pt_m_t  pt_m_tt  \\\n",
       "0    29476       41    29483       46  5876274   29990      76       95   \n",
       "1    29456       41    29462       46  5876275   29866      74       95   \n",
       "\n",
       "   pt_r_d  pt_r_t      ...          to_id  walk_d  walk_t    GML_ID   NAMEFIN  \\\n",
       "0   24984      77      ...        5975375   25532     365  27517366  Helsinki   \n",
       "1   24860      75      ...        5975375   25408     363  27517366  Helsinki   \n",
       "\n",
       "       NAMESWE NATCODE                                           geometry  \\\n",
       "0  Helsingfors     091  POLYGON ((402250.0001322526 6685750.000039577,...   \n",
       "1  Helsingfors     091  POLYGON ((402367.8898583531 6685750.000039573,...   \n",
       "\n",
       "  nb_pt_r_tt  suitable_area  \n",
       "0          8              0  \n",
       "1          8              0  \n",
       "\n",
       "[2 rows x 21 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create column for the classification results\n",
    "acc[\"suitable_area\"] = None\n",
    "\n",
    "# Use the function\n",
    "acc = acc.apply(custom_classifier, src_col1='pt_r_tt', \n",
    "                src_col2='walk_d', threshold1=20, threshold2=4000, \n",
    "                output_col=\"suitable_area\", axis=1)\n",
    "\n",
    "# See the first rows\n",
    "acc.head(2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Okey we have new values in `suitable_area` -column.\n",
    "\n",
    "- How many Polygons are suitable for us? Let's find out by using a Pandas function called `value_counts()` that return the count of different values in our column.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    3798\n",
       "1       9\n",
       "Name: suitable_area, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Get value counts\n",
    "acc['suitable_area'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Okay, so there seems to be nine suitable locations for us where we can try to find an appartment to buy.\n",
    "\n",
    "- Let's see where they are located:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot\n",
    "acc.plot(column=\"suitable_area\", linewidth=0);\n",
    "\n",
    "# Use tight layour\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A-haa, okay so we can see that suitable places for us with our criteria seem to be located in the\n",
    "eastern part from the city center. Actually, those locations are along the metro line which makes them good locations in terms of travel time to city center since metro is really fast travel mode.\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
